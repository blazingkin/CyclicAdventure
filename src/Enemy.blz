import GameUtil
constructor Enemy(name, starting_health, bounty, on_act)

    health = starting_health

    :hurt(amount)
        health = health - amount
    end

    :heal(amount)
        health = health + amount
        if health > starting_health
            health = starting_health
        end
    end

    :show
        name + "\n" + health + "/" + starting_health
    end

    :act(combat_state)
        on_act!(combat_state)
    end

end

:hurt_player_func_helper(combat_state, dmg, msg)
    damage = dmg + random(0 - dmg / 4, dmg / 4)
    combat_state.player.hurt(damage)
    inform(msg + damage +" damage")
end

:hurt_player_func(dmg, msg)
    combat_state -> hurt_player_func_helper(combat_state, dmg, msg)
end


:dragon_action(combat_state)
    option = random(2)
    if option == 0
        damage = 30 + random(-5, 5)
        combat_state.player.hurt(damage)
        inform("The dragon roasts you for "+damage+" damage")
    else
        combat_state.add_enemy("Whelp")
        inform("The dragon summons an underling")
    end
end

:stomp(combat_state)
    damage = 10 + random(-2, 5)
    combat_state.player.hurt(damage)
    inform("The centaur stomps you for "+damage+" damage")
end

:queen_bee_combat(combat_state)
    if combat_state.get_enemies().size() == 1
        combat_state.add_enemy("Bee")
        combat_state.add_enemy("Bee")
        inform("The queen bee calls her brood!")
        return ""        
    end
    option = random(10)
    if option < 3
        combat_state.add_enemy("Bee")
        combat_state.add_enemy("Bee")
        combat_state.add_enemy("Bee")
        inform("The bees are swarming!")
    else if option < 8
        hurt_player_func_helper(combat_state, 5, "The queen bee jabs you for ")
    else
        hurt_player_func_helper(combat_state, 20, "The queen bee impales you for ")
    end
end

:skeleton_king_combat(combat_state)
    option = random(2)
    if option == 0
        combat_state.add_enemy("Skeleton Warrior")
    else
        combat_state.add_enemy("Skeleton Archer")
    end
    inform("The king rises another minion")
end

:name_to_enemy(name)
    if name == "Dragon"
        Enemy(name, 500, 999999, dragon_action)
    else if name == "Whelp"
        Enemy(name, 10, 5, hurt_player_func(5, "The whelp spits at you for "))
    else if name == "Centaur"
        Enemy(name, 50, 30, stomp)
    else if name == "Bee"
        Enemy(name, 5, 1, hurt_player_func(2, "The bee stings you for "))
    else if name == "Queen Bee"
        Enemy(name, 50, 20, queen_bee_combat)
    else if name == "Feral Dog"
        Enemy(name, 30, 10, hurt_player_func(6, "The dog bites you for "))
    else if name == "Skeleton Warrior"
        Enemy(name, 20, 5, hurt_player_func(7, "The skeleton strikes you with his sword for "))
    else if name == "Skeleton Archer"
        Enemy(name, 25, 7, hurt_player_func(10, "The skeleton's arrow pierces you for "))
    else if name == "Skeleton King"
        Enemy(name, 100, 500, skeleton_king_combat)
    else
        throw "Invalid enemy name "+name
    end
end

:names_to_enemies(names)
    names.map(name_to_enemy)
end

:generic_enemies
    ["Centaur", "Queen Bee", "Feral Dog", "Skeleton Warrior", "Skeleton Archer"]
end