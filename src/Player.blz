import GameUtil
require Item

:use_items(combat_state)
    print("Items")
    items = combat_state.get_player().get_items()
    names = []
    for i = 0; i < items.size(); i++
        names[i] = items[i].get_name()
    end
    to_use = get_option_or_go_back(names)
    if (to_use == -1)
        return false
    end

    action = items[to_use].use
    if action!(items[to_use], combat_state) == false
        return false
    end

    return true
end

:punch(combat_state)
    print("Who would you like to punch?")
    enemies = combat_state.get_enemies()
    enemy_names = enemies.map(x -> x.name + " - " +x.health + "hp")
    enemy_number = get_option_or_go_back(enemy_names)
    if enemy_number == -1
        return false
    end

    damage = (combat_state.get_player().current_strength() * 1.5).floor() + random(-5, 5)

    enemies[enemy_number].hurt(damage)
    enemy_name = enemies[enemy_number].name
    inform("You hit the "+enemy_name+" for "+damage+" damage")
    return true
end

constructor Player(name, class)

    strength = class.base_strength
    agility = class.base_agility
    intelligence = class.base_intelligence
    gold = class.base_gold
    items = class.starting_items

    :max_health
        strength * 10
    end
    
    health = max_health()



    :acquire_item(item)
        items[items.size()] = name_to_item(item)
    end
    :remove_item(item)
        index = -1
        for i = 0; i < items.size(); i++
            if items[i] == item
                index = i
            end
        end
        if index != -1
            items.remove!(index)
        end
    end
    :get_items
        items
    end

    :actions
        [["Punch", punch], ["Use item", use_items]]
    end

    :current_strength
        strength
    end

    :current_agility
        agility
    end

    :current_intelligence
        intelligence
    end

    :increase_stats(str, agi, int)
        strength = strength + str
        agility = agility + agi
        intelligence = intelligence + int
    end

    :heal(amount)
        health = health + amount
        if health > max_health()
            health = max_health()
        end
    end

    :hurt(amount)
        health = health - amount
    end

    :get_health
        health
    end

    :change_gold(amount)
        gold = gold + amount
        if gold < 0
            gold = 0
        end
    end

    :current_gold
        gold
    end

    :show
        result = name + " the " + class + "\n"
        result = result + current_strength() + " STR - " + current_agility() + " AGI - " + current_intelligence() +" INT\n"
        result = result + gold +" gold\n"
        result = result + health + "/" + max_health() + " health"
        result
    end

    :print_combat_info()
        result = name + " the " + class + "\n"
        result = result + health + "/" + max_health() + " health"
        print(result)
    end

end